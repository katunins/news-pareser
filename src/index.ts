import { Builder, Browser, By, until } from 'selenium-webdriver'

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Selenium Hub
async function waitForSeleniumHub(statusUrl: string, maxAttempts = 30): Promise<void> {
    console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Selenium Hub...')
    console.log(`üîó –ü—Ä–æ–≤–µ—Ä—è–µ–º URL: ${statusUrl}`)
    for (let attempt = 1; attempt <= maxAttempts; attempt++) {
        try {
            console.log(`üì° –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è ${attempt}/${maxAttempts}...`)
            const response = await fetch(statusUrl)
            console.log(`üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${response.status} ${response.statusText}`)
            if (response.ok) {
                console.log('‚úÖ Selenium Hub –≥–æ—Ç–æ–≤!')
                return
            }
        } catch (error) {
            console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ${(error as Error).message}`)
        }
        console.log(`‚è≥ –ü–æ–ø—ã—Ç–∫–∞ ${attempt}/${maxAttempts} - Selenium Hub –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤, –æ–∂–∏–¥–∞–Ω–∏–µ 2 —Å–µ–∫—É–Ω–¥—ã...`)
        await new Promise(resolve => setTimeout(resolve, 2000))
    }
    throw new Error('Selenium Hub –Ω–µ –≥–æ—Ç–æ–≤ –ø–æ—Å–ª–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–ø—ã—Ç–æ–∫')
}

async function parseDivs() {
    // URL –¥–ª—è WebDriver
    console.log('SELENIUM_HUB_URL', process.env.SELENIUM_HUB_URL)
    const seleniumHubUrl = process.env.SELENIUM_HUB_URL || 'http://localhost:4444/wd/hub'
    // URL –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ Selenium Grid 4
    const seleniumStatusUrl = seleniumHubUrl.replace(/\/wd\/hub$/, '') + '/status'

    console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞...')
    console.log(`üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Selenium Hub: ${seleniumHubUrl}`)

    // –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Selenium Hub
    await waitForSeleniumHub(seleniumStatusUrl)

    let driver: any = null

    try {
        // –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ Selenium Grid
        driver = await new Builder()
            .usingServer(seleniumHubUrl)
            .forBrowser(Browser.CHROME)
            .build()

        console.log('‚úÖ –î—Ä–∞–π–≤–µ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ')

        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–∞–π—Ç
        console.log('üåê –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–∞–π—Ç https://ikatunin.ru...')
        await driver.get('https://ikatunin.ru')

        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        await driver.wait(until.elementLocated(By.tagName('body')), 10000)
        console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞')

        // –ò—â–µ–º –≤—Å–µ div —ç–ª–µ–º–µ–Ω—Ç—ã
        console.log('üîç –ü–æ–∏—Å–∫ –≤—Å–µ—Ö div —ç–ª–µ–º–µ–Ω—Ç–æ–≤...')
        const divElements = await driver.findElements(By.tagName('div'))

        console.log(`\nüìä –ù–∞–π–¥–µ–Ω–æ div —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${divElements.length}`)
        console.log('='.repeat(50))

        // –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º div
        for (let i = 0; i < divElements.length; i++) {
            try {
                const div = divElements[i]
                const tagName = await div.getTagName()
                const className = await div.getAttribute('class')
                const id = await div.getAttribute('id')
                const text = await div.getText()

                console.log(`\nüîπ Div #${i + 1}:`)
                console.log(`   Tag: ${tagName}`)
                console.log(`   Class: ${className || '–Ω–µ—Ç'}`)
                console.log(`   ID: ${id || '–Ω–µ—Ç'}`)
                console.log(`   Text: ${text.substring(0, 100)}${text.length > 100 ? '...' : ''}`)

                // –ï—Å–ª–∏ –µ—Å—Ç—å –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                const childElements = await div.findElements(By.xpath('.//*'))
                if (childElements.length > 0) {
                    console.log(`   –í–ª–æ–∂–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${childElements.length}`)
                }

            } catch (error) {
                console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ div #${i + 1}:`, (error as Error).message)
            }
        }

        console.log('\n' + '='.repeat(50))
        console.log('‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!')

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞:', error)
    } finally {
        if (driver) {
            console.log('üîö –ó–∞–∫—Ä—ã—Ç–∏–µ –¥—Ä–∞–π–≤–µ—Ä–∞...')
            await driver.quit()
            console.log('‚úÖ –î—Ä–∞–π–≤–µ—Ä –∑–∞–∫—Ä—ã—Ç')
        }
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥
parseDivs().catch(console.error)